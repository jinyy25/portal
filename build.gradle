plugins {
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kr.res.portal'
version = '1.0.0'
//sourceCompatibility = 1.8
//targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://maven.egovframe.go.kr/maven/"
    }
}

ext {
    set('springMavenArtifactVersion', '5.3.27')
    set('orgEgovframeRteVersion', '4.2.0')
}

dependencies {

    configurations {
        implementation.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
    }

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.8'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:2.1.7'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.6'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer:3.1.7'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    implementation("org.egovframe.rte:org.egovframe.rte.fdl.cmmn:${orgEgovframeRteVersion}") {
        exclude group: 'org.egovframe.rte', module: 'org.egovframe.rte.fdl.logging'
    }
    implementation "org.egovframe.rte:org.egovframe.rte.ptl.mvc:${orgEgovframeRteVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.8'
//    implementation 'org.springframework.cloud:spring-cloud-sleuth-:3.1.8'


    // MariaDB JDBC driver
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.3.0'

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0:jpa'
    implementation 'com.querydsl:querydsl-sql:5.0.0'

    // Spring Boot Starter Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 Database for JPA
    runtimeOnly 'com.h2database:h2'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    //MQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.7"
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

// (4) queryDSL 추가 : QueryDSL 빌드 옵션
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}




/* 배포시 해당 주석부분 해제 */

//def frontendDir = "$projectDir/src/main/frontend/app-portal"
//
//sourceSets {
//main {
//	resources { srcDirs = ["$projectDir/src/main/resources"]
//	}
//}
//}
//
//processResources { dependsOn "copyReactBuildFiles" }
//
//task installReact(type: Exec) {
//workingDir "$frontendDir"
//inputs.dir "$frontendDir"
//group = BasePlugin.BUILD_GROUP
//if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//	commandLine "npm.cmd", "audit", "fix"
//	commandLine 'npm.cmd', 'install' }
//else {
//	commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
//}
//}
//
//task buildReact(type: Exec) {
//dependsOn "installReact"
//workingDir "$frontendDir"
//inputs.dir "$frontendDir"
//group = BasePlugin.BUILD_GROUP
//if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//	commandLine "npm.cmd", "run-script", "build"
//} else {
//	commandLine "npm", "run-script", "build"
//}
//}
//task copyReactBuildFiles(type: Copy) {
//dependsOn "buildReact"
//from "$frontendDir/build"
//into "$projectDir/src/main/resources/static"
//}
